
"use strict";

var path = require('path');
var fs = require('fs');
var _ = require('lodash'); //lodash
var nopt = require('nopt');

/**
 * 块分析的表达式
 */
function regbuild(){
    return /<!--\s*build:\s*([^\s]*)\s*([^\s]*)\s*-->((\n|\r|.)*?)<!--\s*endbuild\s*-->/ig;
}

var getBlocks = function (content) {
    
  var sections = [];
  //得到build块
  var blockMatchs = content.match(regbuild());
  _.forEach(blockMatchs , function (block) {
        var arr = regbuild().exec(block);    
        sections.push({
                blockType:arr[1], //块类型
                targetFilePath:arr[2], //发布文件
                blockInnerContent:arr[3], //当前块内容 <!--buiid:xxx xxx --><!--endbuild>中内容
                blockOuterContent:block     //原始文件内容
        });
  });
  return sections;
};

 var knownOpts = {
                   "file" : [String , null],  //requireInject
                   "destPath" : [String , null]   //script src
                };
var shortHands = {};
var options =  nopt(knownOpts, shortHands, process.argv);

var content = fs.readFileSync(options.file).toString();

var blocks = getBlocks(content);

console.log(blocks);
