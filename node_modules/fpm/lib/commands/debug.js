"use strict";

var defaultConfig = require('../config');
var cli = require('../util/cli');  //命令行
var fileUtils = require('file-utils');
var wm = require('wm');  //组件(widget)管理
var computil = wm.ComponentUtils; //组件工具
var nopt = require('nopt');
/**
 * 安装原始的引用
 * fpm debug 
 */
function debug(options) {
    var appIndexPath = options.file || 'app/index.html';
    var installDir = process.cwd();
    var bowerJson = fileUtils.readJSON('bower.json');
    var indexContent = fileUtils.read(appIndexPath);
    var deps = bowerJson.dependencies;
    var moduleNames = [];
    for(var name in deps){
        moduleNames.push(name);
    }
    if(moduleNames.length ==0){
        return;
    }
    var depInfo =computil.getDepInfo(moduleNames , {'installDir':'.'});
    var depFiles = computil.getDepFiles(depInfo);
    var debugScriptjs = computil.getJsDepsScriptsMode(depFiles);
    indexContent = replaceDeugBlock(indexContent , debugScriptjs.replace(/\\/g,'/').replace(/\.\/app\//g,'')); //替换app目录
    fileUtils.write(appIndexPath , indexContent);
}


function replaceDeugBlock(content , debugScriptjs){
    //<!--debugjs--><!--enddebugjs-->
    var regx = /(<!--\s*debugjs-->)((?:.|\n)*)(<!--enddebugjs-->)/ig;
    return content.replace(regx , function(match , prefix , content , siffix , offset , str){
           //return match.replace(content , '\n'+debugScriptjs);
           /*
           console.log('match:' , match)
           console.log('prefix:' , prefix)
           console.log('content:' ,content)
           console.log('siffix:' , siffix)
           console.log('offset :' , offset)
           console.log('str:' , str.substring(0 , offset))
           */
           //var c = prefix+debugScriptjs+siffix;
           return prefix+'\n'+debugScriptjs+'\n'+siffix;
    });
}
// -------------------

debug.line = function (argv) {
    return debug(debug.options(argv));
};

debug.options = function (argv) {
    var knownOpts = {
                   "file" : String
                };
    var shortHands = {};
    var options =  nopt(knownOpts, shortHands, argv);
    if(typeof options.file == 'undefined'){
        options.file = 'app/index.html';
    }
    return options;
};

debug.completion = function () {
    // TODO:
};

module.exports = debug;