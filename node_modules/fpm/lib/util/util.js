'use strict';

var nodeUtil = require('util');
var fileUtils = require('file-utils');
var path = require('path');
var fs = require('fs');

var util = module.exports = {};

util.kindOf = function(value) {
  // Null or undefined.
  if (value == null) { return String(value); }
  // Everything else.
  return kindsOf[kindsOf.toString.call(value)] || 'object';
};


util.toArray = Function.call.bind(Array.prototype.slice);

util.error = function(err, origError) {
  if (!nodeUtil.isError(err)) { err = new Error(err); }
  if (origError) { err.origError = origError; }
  return err;
};


/**
 * 备份指定的文件到内存
 */
util.backFile = function(paths){
	var backfiles = [];
    paths.forEach(function(file){
        var content = fileUtils.read(file);
        backfiles.push({'file':file , 'content' : content});
    });
    return backfiles;
}

/**
 * 恢复内存文件
 */
util.recoveFile = function(backfiles){
	backfiles.forEach(function(backFile){
        fileUtils.write(backFile.file , backFile.content);
    });
}


// util.getInitConfigFilePath = function () {
//   var env = process.env;
//   var exendDir = 'fpmconfig';
//   var result = env.HOME || env.USERPROFILE;
//   result = path.join(result, exendDir);
//   if (!fs.existsSync(result)) {
//     fs.mkdirSync(result);
//   }
//   return result;
// };